name: Build iOS and Android Caches

on:
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-ios:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Setup pnpm
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Generate Prisma client
        run: pnpm prisma generate

      - name: Build TypeScript
        run: pnpm build

      - name: Build iOS cache
        run: ./bin/jfp-app-cache-builder --target ios --verbose
        env:
          NODE_OPTIONS: '--max-old-space-size=4096'

      - name: Zip iOS database
        run: |
          zip ios-cache.zip assets/ios/cache.realm

      - name: Upload iOS cache
        uses: actions/upload-artifact@v4
        with:
          name: ios-cache
          path: ios-cache.zip
          retention-days: 5

  build-android:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Setup pnpm

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Generate Prisma client
        run: pnpm prisma generate

      - name: Build TypeScript
        run: pnpm build

      - name: Build Android cache
        run: ./bin/jfp-app-cache-builder --target android --verbose
        env:
          NODE_OPTIONS: '--max-old-space-size=4096'
          DATABASE_URL: 'file:${{ github.workspace }}/assets/android/cache.db?connection_limit=1&pool_timeout=60&query_timeout=60'

      - name: Zip Android database
        run: |
          zip android-cache.zip assets/android/cache.db

      - name: Upload Android cache
        uses: actions/upload-artifact@v4
        with:
          name: android-cache
          path: android-cache.zip
          retention-days: 5

  deploy-pages:
    needs: [build-ios, build-android]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download iOS artifact
        uses: actions/download-artifact@v4
        with:
          name: ios-cache
          path: ./artifacts/

      - name: Download Android artifact
        uses: actions/download-artifact@v4
        with:
          name: android-cache
          path: ./artifacts/

      - name: Prepare GitHub Pages site
        run: |
          # Replace placeholders in the HTML template
          BUILD_DATE=$(date -u '+%Y-%m-%d %H:%M:%S UTC')
          BUILD_NUMBER="${{ github.run_number }}"
          COMMIT_SHA="${{ github.sha }}"
          
          # Create the pages directory
          mkdir -p _site
          
          # Copy artifacts to be served directly
          cp ./artifacts/ios-cache.zip _site/
          cp ./artifacts/android-cache.zip _site/
          
          # Copy assets folder (logo, etc.)
          if [ -d "docs/assets" ]; then
            cp -r docs/assets _site/
          fi
          
          # Process the HTML template with build information
          sed \
            -e "s|{{BUILD_DATE}}|${BUILD_DATE}|g" \
            -e "s|{{BUILD_NUMBER}}|${BUILD_NUMBER}|g" \
            -e "s|{{COMMIT_SHA}}|${COMMIT_SHA}|g" \
            docs/index.html > _site/index.html

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./_site

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
